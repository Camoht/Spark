[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\CYTECH~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\CYTECH~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.7 (Oracle Corporation Java 20.0.1)
[debug] Load.defaultLoad until apply took 133.3318ms
[debug]           Load.loadUnit: plugins took 65.2904ms
[debug]           Load.loadUnit: defsScala took 0.1612ms
[debug] [Loading] Scanning directory H:\Documents\CY-Tech\Ing2 GMA\Semestre 1\Scala\untitled\project
[debug]             Load.loadUnit: mkEval took 4.8699ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in H:\Documents\CY-Tech\Ing2 GMA\Semestre 1\Scala\untitled\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.806 ms
[info] loading settings for project untitled-build from idea.sbt...
[debug]               Load.resolveProject(untitled-build) took 23.2909ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled-build, base: H:\Documents\CY-Tech\Ing2 GMA\Semestre 1\Scala\untitled\project, plugins: List(<none>))) took 44.951ms
[debug] [Loading] Done in H:\Documents\CY-Tech\Ing2 GMA\Semestre 1\Scala\untitled\project, returning: (untitled-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2343.4531ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.1296ms
[debug]         Load.loadUnit(file:/H:/Documents/CY-Tech/Ing2%20GMA/Semestre%201/Scala/untitled/project/, ...) took 2419.645ms
[debug]       Load.apply: load took 2510.7289ms
[debug]       Load.apply: resolveProjects took 2.8338ms
[debug]       Load.apply: finalTransforms took 43.3559ms
[debug]       Load.apply: config.delegates took 7.8563ms
[debug]       Load.apply: Def.make(settings)... took 348.3004ms
[debug]       Load.apply: structureIndex took 85.1625ms
[debug]       Load.apply: mkStreams took 1.5228ms
[info] loading project definition from H:\Documents\CY-Tech\Ing2 GMA\Semestre 1\Scala\untitled\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4496.9824ms
[debug]     Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory H:\Documents\CY-Tech\Ing2 GMA\Semestre 1\Scala\untitled
[debug]       Load.loadUnit: mkEval took 0.3853ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.4315 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 25.0705ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: H:\Documents\CY-Tech\Ing2 GMA\Semestre 1\Scala\untitled, plugins: List(<none>))) took 27.4707ms
[debug] [Loading] Done in H:\Documents\CY-Tech\Ing2 GMA\Semestre 1\Scala\untitled, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 988.0331ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.685ms
[debug]   Load.loadUnit(file:/H:/Documents/CY-Tech/Ing2%20GMA/Semestre%201/Scala/untitled/, ...) took 5493.1871ms
[debug] Load.apply: load took 5515.5653ms
[debug] Load.apply: resolveProjects took 0.1315ms
[debug] Load.apply: finalTransforms took 26.5428ms
[debug] Load.apply: config.delegates took 0.2362ms
[debug] Load.apply: Def.make(settings)... took 59.7105ms
[debug] Load.apply: structureIndex took 21.5695ms
[debug] Load.apply: mkStreams took 0.0018ms
[info] set current project to SparkLearning (in build file:/H:/Documents/CY-Tech/Ing2%20GMA/Semestre%201/Scala/untitled/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
